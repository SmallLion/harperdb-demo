{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useHarperDB","query","operation","sql","interval","data","error","refresh","className","onClick","map","row","index","blog","author","href","website","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","url","process","user","password","document","getElementById"],"mappings":"uOAiDeA,MA9Cf,WACE,MAAwCC,sBAAY,CAClDC,MAAO,CAAEC,UAAW,MAAOC,IAAI,4BAC/BC,SAAU,MAFZ,mBAAOC,EAAP,KAAsBC,GAAtB,WAA6BC,EAA7B,KAKA,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,uDACA,wBAAQC,QAASF,EAAjB,qBACCF,EACC,kCACA,gCACE,+BACE,sCACA,wCACA,8CAGJ,gCACGA,EAAKK,KAAI,SAACC,EAAKC,GACd,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,SACT,6BAAI,mBAAGC,KAAMJ,EAAIK,QAAb,SAAuBL,EAAIK,cAHxBJ,WASbN,EACF,sBAAKW,MAAO,CAAEC,MAAO,OAArB,oBAAsCZ,GAAS,WAE/C,gDAIJ,uFACmD,mBAAGS,KAAK,0BAAR,6BADnD,4BC9BSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,mBAAD,CAAkBC,IANZC,2CAMsBC,KALrBD,cAKiCE,SAJ7BF,cAIX,SACA,cAAC,EAAD,QAGFG,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.8f229c5d.chunk.js","sourcesContent":["import './App.css';\nimport { useHarperDB } from 'use-harperdb';\n\nfunction App() {\n  const [data, loading, error, refresh] = useHarperDB({\n    query: { operation: 'sql', sql: `select * from blog.blogs` },\n    interval: 50000,\n  })\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Top Programming Blogs</h1>\n        <button onClick={refresh}>Refresh</button>\n        {data ? (\n          <table>\n          <thead>\n            <tr>\n              <td>Blog</td>\n              <td>Author</td>\n              <td>Website</td>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((row, index) => {\n              return (\n                <tr key={index}>\n                  <td>{row.blog}</td>\n                  <td>{row.author}</td>\n                  <td><a href={row.website}>{row.website}</a></td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        ) : error ? (\n          <div style={{ color: 'red' }}>Error: {error || 'false'}</div>\n        ) : (\n          <div>Loading...</div>\n        )}\n        \n      </header>\n      <footer>\n        Demo built to showcase HarperDB and React. Visit <a href=\"https://lo-victoria.com\">lo-victoria.com</a> to read tutorial.\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HarperDBProvider } from 'use-harperdb';\n\nlet url = process.env.REACT_APP_DB_URL\nlet user = process.env.REACT_APP_USER\nlet password = process.env.REACT_APP_PASSWORD\n\nReactDOM.render(\n  <React.StrictMode>\n    <HarperDBProvider url={url} user={user} password={password}>\n    <App />\n    </HarperDBProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}